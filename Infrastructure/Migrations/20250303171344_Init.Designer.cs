// <auto-generated />
using System;
using Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(IceCreamShopDbContext))]
    [Migration("20250303171344_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.IceCream", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("IceCreams");

                    b.HasData(
                        new
                        {
                            Id = new Guid("77db44c0-6b18-4383-8ea1-f4872cd0e9cd"),
                            Name = "Vanilla",
                            Price = 5.00m,
                            Size = 0
                        },
                        new
                        {
                            Id = new Guid("603ff90e-ffc6-400a-b6af-bc6f36b6aacd"),
                            Name = "Chocolate",
                            Price = 5.50m,
                            Size = 1
                        },
                        new
                        {
                            Id = new Guid("5c5c94ee-cabd-4135-b83c-648fef2721e8"),
                            Name = "Strawberry",
                            Price = 6.00m,
                            Size = 2
                        });
                });

            modelBuilder.Entity("Domain.Entities.IceCreamTopping", b =>
                {
                    b.Property<Guid>("IceCreamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ToppingId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IceCreamId", "ToppingId");

                    b.HasIndex("ToppingId");

                    b.ToTable("IceCreamToppings");
                });

            modelBuilder.Entity("Domain.Entities.Topping", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Toppings");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6def5925-6269-491e-913e-0a50863472cd"),
                            Name = "Smarties",
                            Price = 1.00m
                        },
                        new
                        {
                            Id = new Guid("05550215-3b75-45db-9a0a-713fa862e581"),
                            Name = "Melted Chocolate",
                            Price = 1.50m
                        });
                });

            modelBuilder.Entity("Domain.Entities.IceCreamTopping", b =>
                {
                    b.HasOne("Domain.Entities.IceCream", "IceCream")
                        .WithMany("IceCreamToppings")
                        .HasForeignKey("IceCreamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Topping", "Topping")
                        .WithMany()
                        .HasForeignKey("ToppingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IceCream");

                    b.Navigation("Topping");
                });

            modelBuilder.Entity("Domain.Entities.IceCream", b =>
                {
                    b.Navigation("IceCreamToppings");
                });
#pragma warning restore 612, 618
        }
    }
}
